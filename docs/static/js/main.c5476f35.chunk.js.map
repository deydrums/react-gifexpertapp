{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAGzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACQ,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAMd,SACI,uBACIO,KAAM,OACNC,MAAST,EACTU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVDC,qBAAU,WACLxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGxB,CAACpB,IAEKqB,EDbwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QACpB,OACI,qCACI,oBAAIJ,UAAW,oCAAf,SAAoDhB,IACnDoB,GAAW,mBAAGJ,UAAW,mCAAd,qBACZ,qBAAKA,UAAW,YAAhB,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEqBxBgB,EAjCM,WAGjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAYA,GACLA,Y,MCtBnC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c5476f35.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n//export const AddCategory = ({categories, setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            //setCategories([...categories, inputValue]);\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type =\"text\"\r\n                    value = {inputValue}\r\n                    onChange={handleInputChange} \r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=rabMybUsDF3yxKx6viMjjcRhAIEXcUe5`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3 className =\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className =\"animate__animated animate__flash\">Loading</p>}\r\n            <div className =\"card-grid\">\r\n                \r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n   useEffect(() =>{\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n   },[category])\r\n\r\n    return state; // {data:[], loading: true};\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories, 'HunterXHunter']);\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            {/* <AddCategory categories = {categories} setCategories = {setCategories}/> */}\r\n            <hr></hr>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            category = {category}\r\n                            key = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n      \r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr>\n\n\n"],"sourceRoot":""}